type Query {
  getResearcher: Researcher
}

type Mutation {
  createResearcher(input: CreateResearcherInput): Researcher
}

type Researcher {
  id: ID!
  auditLog: AuditConnection
  createdAt: Timestamp!
  deletedAt: Timestamp
  verifiedAt: Timestamp
  name: String!
  email: String!
  trials: TrialConnection
}

type ResearcherEdge {
  node: Trial
  cursor: Cursor!
}

type ResearcherConnection {
  totalCount: Int!
  pageInfo: PageInfo!
  edges: [ResearcherEdge]!
}

input CreateResearcherInput {
  name: String!
  dateOfBirth: String!
}
