type Query {
  getEligibleTrials: TrialConnection
  getTrial(trialId: String!): Trial
}

type Mutation {
  createTrial(input: CreateTrialInput): Trial
}

enum Frequency {
  DAILY
  WEEKLY
  FORTNIGHTLY
  MONTHLY
}

type Trial {
  id: ID!
  createdAt: Timestamp!
  deletedAt: Timestamp
  title: String!
  synopsis: String!
  description: String!
  tags: [String!]!
  startTime: Timestamp!
  endTime: Timestamp!
  frequency: Frequency!
  auditLog: AuditConnection
  lead: Investigator
  investigators: InvestigatorConnection
  participants: CandidateConnection
  questions: [Question!]
}

type TrialEdge {
  node: Trial
  cursor: Cursor!
}

type TrialConnection {
  totalCount: Int!
  pageInfo: PageInfo!
  edges: [TrialEdge]!
}

input CreateTrialInput {
  startTime: Timestamp!
  duration: Int!
  title: String!
  synopsis: String!
  description: String!
  tags: [String!]!
  frequency: Frequency!
}
